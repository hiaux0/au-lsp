{
	"name": "lsp-sample",
	"description": "A language server example",
	"author": "Microsoft Corporation",
	"license": "MIT",
	"version": "1.0.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-extension-samples"
	},
	"publisher": "vscode-samples",
	"categories": [],
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.43.0"
	},
	"activationEvents": [
		"onCommand:aurelia.openClassMethodsHierarchy",
		"onLanguage:plaintext"
	],
	"main": "./client/out/client/src/extension",
	"contributes": {
		"commands": [
			{
				"command": "languageServerExample.startStreaming",
				"title": "Start Stream Logs into languageServerExample.port"
			},
			{
				"command": "aurelia.openClassMethodsHierarchy",
				"title": "Open class methods hierarchy",
				"category": "Aurelia"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Example configuration",
			"properties": {
				"languageServerExample.maxNumberOfProblems": {
					"scope": "resource",
					"type": "number",
					"default": 100,
					"description": "Controls the maximum number of problems produced by the server."
				},
				"languageServerExample.port": {
					"type": "number",
					"default": 7000,
					"scope": "window",
					"description": "The WebSocket port to stream LSP log data into."
				},
				"languageServerExample.trace.server": {
					"scope": "window",
					"type": "object",
					"description": "Traces the communication between VS Code and the language server.",
					"properties": {
						"verbosity": {
							"type": "string",
							"description": "Controls the verbosity of the trace.",
							"enum": [
								"off",
								"messages",
								"verbose"
							],
							"default": "off"
						},
						"format": {
							"type": "string",
							"description": "Controls the output format of the trace.",
							"enum": [
								"text",
								"json"
							],
							"default": "text"
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "cd client && npm run update-vscode && cd .. && npm run compile",
		"compile": "npm run compile:client && npm run compile:server",
		"compile:client": "tsc -p ./client/tsconfig.json",
		"compile:server": "tsc -p ./server/tsconfig.json",
		"watch": "tsc -b -w",
		"watch:client": "tsc -w -p ./client/tsconfig.json",
		"watch:server": "tsc -w -p ./server/tsconfig.json",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"test": "sh ./scripts/e2e.sh",
		"start:depTree": "./node_modules/.bin/code-dependency --exclude 'node_modules' --source ./_code-dep"
	},
	"devDependencies": {
		"@code-dependency/cli": "^0.5.0",
		"@types/mocha": "^5.2.7",
		"@types/node": "^12.11.7",
		"@typescript-eslint/parser": "^2.3.0",
		"eslint": "^6.4.0",
		"mocha": "^6.2.2",
		"typescript": "^3.8.3",
		"core-js": "^3.6.5"
	},
	"dependencies": {
		"aurelia-dependency-injection": "^1.5.2",
		"lodash": "^4.17.15",
		"reflect-metadata": "^0.1.9",
		"vscode-css-languageservice": "^4.1.2",
		"vscode-html-languageservice": "^3.0.3"
	}
}
